/*
 * 
 */
package forms;

import dtos.CompraDTO;
import dtos.DetalleCompraDTO;
import dtos.ProductoDTO;
import excepciones.NegocioException;
import interfaces.IControlComprasBO;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import negocio.ControlComprasBO;

/**
 *
 * @author Juventino López García - 00000248547
 */
public class RegistrarCompraDlg extends javax.swing.JDialog {

    IControlComprasBO control = new ControlComprasBO();
    private List<DetalleCompraDTO> detallesCompra;
    private float total;

    /**
     * Creates new form RegistrarCompraDlg
     */
    public RegistrarCompraDlg(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        detallesCompra = new ArrayList<>();
        initComponents();
        llenarTablaVenta();
    }

    private void llenarTablaVenta() {
        DefaultTableModel modeloTabla = (DefaultTableModel) detallesCompraTbl.getModel();
        if (modeloTabla.getRowCount() > 0) {
            for (int i = modeloTabla.getRowCount() - 1; i > -1; i--) {
                modeloTabla.removeRow(i);
            }
        }
        if (detallesCompra != null) {
            detallesCompra.forEach(row -> {
                Object[] fila = new Object[4];
                fila[0] = row.getCodigoProducto();
                fila[1] = row.getNombreProducto();
                fila[2] = row.getCantidad();
                fila[3] = row.getTotal();

                modeloTabla.addRow(fila);
            });
        }
    }

    private void calcularTotal() {
        total = 0;
        for (DetalleCompraDTO detalleCompraDTO : detallesCompra) {
            total += detalleCompraDTO.getTotal();
        }
        totalLbl.setText(String.valueOf(total));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        agregarProductoBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        detallesCompraTbl = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        nombreProveedorTxt = new javax.swing.JTextField();
        finalizarBtn = new javax.swing.JButton();
        cancelarBtn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        totalLbl = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setModalityType(java.awt.Dialog.ModalityType.APPLICATION_MODAL);

        jLabel1.setText("Registrar Compra");

        agregarProductoBtn.setText("Agregar");
        agregarProductoBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarProductoBtnActionPerformed(evt);
            }
        });

        detallesCompraTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Código", "Producto", "Cantidad", "Costo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(detallesCompraTbl);
        if (detallesCompraTbl.getColumnModel().getColumnCount() > 0) {
            detallesCompraTbl.getColumnModel().getColumn(0).setResizable(false);
            detallesCompraTbl.getColumnModel().getColumn(1).setResizable(false);
            detallesCompraTbl.getColumnModel().getColumn(2).setResizable(false);
            detallesCompraTbl.getColumnModel().getColumn(3).setResizable(false);
        }

        jLabel2.setText("Nombre Proveedor:");

        finalizarBtn.setText("Finalizar");
        finalizarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finalizarBtnActionPerformed(evt);
            }
        });

        cancelarBtn.setText("Cancelar");
        cancelarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarBtnActionPerformed(evt);
            }
        });

        jLabel3.setText("Total: $");

        totalLbl.setText("0");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(nombreProveedorTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel1)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(agregarProductoBtn)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel3)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(totalLbl)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cancelarBtn)
                                    .addGap(18, 18, 18)
                                    .addComponent(finalizarBtn))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(39, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(agregarProductoBtn)
                    .addComponent(jLabel2)
                    .addComponent(nombreProveedorTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(finalizarBtn)
                    .addComponent(cancelarBtn)
                    .addComponent(jLabel3)
                    .addComponent(totalLbl))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void agregarProductoBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarProductoBtnActionPerformed
        AgregarProductoCompraDlg dlg = new AgregarProductoCompraDlg(null, false);
        dlg.setVisible(true);

        ProductoDTO producto = dlg.getProducto();
        Integer cantidad = dlg.getCantidad();
        Float costo = dlg.getCosto();
        if (producto != null) {
            dlg.dispose();
            if (detallesCompra.stream().anyMatch((d) -> d.getCodigoProducto().equals(producto.getCodigo()))) {
                for (DetalleCompraDTO detalleCompraDTO : detallesCompra) {
                    if (detalleCompraDTO.getCodigoProducto().equals(producto.getCodigo())) {
                        detalleCompraDTO.setCantidad(detalleCompraDTO.getCantidad() + cantidad);
                        detalleCompraDTO.setTotal(detalleCompraDTO.getTotal() + costo);
                    }
                }

            } else {
                DetalleCompraDTO detalleCompraDTO = new DetalleCompraDTO();
                detalleCompraDTO.setCantidad(cantidad);
                detalleCompraDTO.setTotal(costo);
                detalleCompraDTO.setCodigoProducto(producto.getCodigo());
                detalleCompraDTO.setNombreProducto(producto.getNombre());
                detallesCompra.add(detalleCompraDTO);
            }

            llenarTablaVenta();
            calcularTotal();
        }
    }//GEN-LAST:event_agregarProductoBtnActionPerformed

    private void cancelarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarBtnActionPerformed
        this.dispose();
    }//GEN-LAST:event_cancelarBtnActionPerformed

    private void finalizarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finalizarBtnActionPerformed
        if (!detallesCompra.isEmpty()) {
            CompraDTO compraDTO = new CompraDTO();
            compraDTO.setDetalles(detallesCompra);
            compraDTO.setFecha(LocalDateTime.now());
            compraDTO.setNombreProveedor(nombreProveedorTxt.getText());
            try {
                control.registrarCompra(compraDTO);
            } catch (NegocioException ex) {
                Logger.getLogger(InicioForm.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, ex.getMessage());
            }
            JOptionPane.showMessageDialog(null, "Se registro la compra exitosamente", "Producto registrado", JOptionPane.INFORMATION_MESSAGE);

            this.dispose();
        } else {
            JOptionPane.showMessageDialog(this, "La compra no tiene ningun elemento aún", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_finalizarBtnActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton agregarProductoBtn;
    private javax.swing.JButton cancelarBtn;
    private javax.swing.JTable detallesCompraTbl;
    private javax.swing.JButton finalizarBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nombreProveedorTxt;
    private javax.swing.JLabel totalLbl;
    // End of variables declaration//GEN-END:variables
}
